<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" id="WebApp_ID" version="2.5">
  <display-name>dotoyoBuildJob</display-name>
  <error-page>
  	<error-code>404</error-code>
  	<location>/jsp/error/pageNotFound.jsp</location>
  </error-page>
  <error-page>
  	<error-code>500</error-code>
  	<location>/jsp/error/serviceError.jsp</location>
  </error-page>
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <listener>
  	<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
  </listener>
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath*:applicationContext*.xml,classpath*:/springConfig/applicationContext-*.xml</param-value>
  </context-param>
  
  <!-- CAS 配置 -->
    <filter>
       <filter-name>CAS Single Sign Out Filter</filter-name>
       <filter-class>org.jasig.cas.client.session.SingleSignOutFilter</filter-class>
    </filter>

    <filter>
       <filter-name>CAS Authentication Filter</filter-name>
       <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
       <init-param>
          <param-name>targetBeanName</param-name>
          <param-value>casAuthenticationFilter</param-value>
       </init-param>
    </filter>

    <filter>
     <filter-name>CAS Validation Filter</filter-name>
     <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
     <init-param>
      <param-name>targetBeanName</param-name>
      <param-value>casValidationFilter</param-value>
     </init-param>
    </filter>

    <filter>
     <filter-name>CAS HttpServletRequestWrapperFilter</filter-name>
     <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
     <init-param>
      <param-name>targetBeanName</param-name>
      <param-value>casHttpServletRequestWrapperFilter</param-value>
     </init-param>
    </filter>

    <filter-mapping>
     <filter-name>CAS Single Sign Out Filter</filter-name>
     <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
     <filter-name>CAS Authentication Filter</filter-name>
     <url-pattern>/personalCenterAction!init.action</url-pattern>
    </filter-mapping>

    <filter-mapping>
     <filter-name>CAS Validation Filter</filter-name>
     <url-pattern>/*</url-pattern>
    </filter-mapping>
    

    <filter-mapping>
     <filter-name>CAS HttpServletRequestWrapperFilter</filter-name>
     <url-pattern>/*</url-pattern>
    </filter-mapping>
    
    <!-- 该过滤器使得开发者可以通过org.jasig.cas.client.util.AssertionHolder来获取用户的登录名。 比如AssertionHolder.getAssertion().getPrincipal().getName()。 -->
	<filter>
	  <filter-name>CAS Assertion Thread Local Filter</filter-name>
	  <filter-class>org.jasig.cas.client.util.AssertionThreadLocalFilter</filter-class>
	</filter>
    <filter-mapping>
     <filter-name>CAS Assertion Thread Local Filter</filter-name>
     <url-pattern>/*</url-pattern>
    </filter-mapping>
    
    <listener>
        <listener-class>org.jasig.cas.client.session.SingleSignOutHttpSessionListener</listener-class>
    </listener>
    
    <!-- 自动根据单点登录的结果设置本系统的用户信息 -->
    <filter>
        <filter-name>DelegatingFilterProxy</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <init-param>
            <param-name>targetBeanName</param-name>
            <param-value>AutoSetUserAdapterFilter</param-value> 
        </init-param>
        <init-param>
            <param-name>targetFilterLifecycle</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>DelegatingFilterProxy</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>
    <!-- CAS END -->

  <filter>
    <filter-name>struts2-cleanup</filter-name>
    <filter-class>org.apache.struts2.dispatcher.ActionContextCleanUp</filter-class>
  </filter>
  <filter>
    <filter-name>struts2</filter-name>
    <filter-class>org.apache.struts2.dispatcher.FilterDispatcher</filter-class>
  </filter>

  <filter>
  	<filter-name>ResponseOverrideFilter</filter-name>
  	<filter-class>org.displaytag.filter.ResponseOverrideFilter</filter-class>
  </filter>

  <filter-mapping>
    <filter-name>struts2-cleanup</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>struts2</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <filter-mapping>
  	<filter-name>ResponseOverrideFilter</filter-name>
  	<url-pattern>*.action</url-pattern>
  </filter-mapping>
  <filter-mapping>
  	<filter-name>ResponseOverrideFilter</filter-name>
  	<url-pattern>*.jsp</url-pattern>
  </filter-mapping>
  <servlet>
	<servlet-name>JspSupportServlet</servlet-name>
	 <servlet-class>
		org.apache.struts2.views.JspSupportServlet
	 </servlet-class>
	 <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet>
	<servlet-name>jcaptcha</servlet-name>
	<servlet-class>com.dotoyo.buildjob.common.servlet.ImageCaptchaServlet</servlet-class>
	<load-on-startup>3</load-on-startup>
  </servlet>
  <servlet-mapping>
	<servlet-name>jcaptcha</servlet-name>
	<url-pattern>/jcaptcha</url-pattern>
  </servlet-mapping>
  <servlet>
	<servlet-name>InitializeServlet</servlet-name>
	<servlet-class>
		com.dotoyo.buildjob.common.servlet.InitializeServlet
	</servlet-class>
	<load-on-startup>1</load-on-startup>
  </servlet>
<!-- Free marker [start]-->
<servlet>
	<servlet-name>freemarker</servlet-name>
	<servlet-class>
		com.dotoyo.buildjob.common.servlet.DotoyoFreemarkerServlet
	</servlet-class>
	<!-- FreemarkerServlet 设置: -->
	<init-param>
		<param-name>TemplatePath</param-name>
		<param-value>/template</param-value>
	</init-param>
	<init-param>
		<param-name>NoCache</param-name>
		<param-value>true</param-value>
	</init-param>
	<init-param>
		<param-name>ContentType</param-name>
		<param-value>text/html; charset=UTF-8</param-value>
	<!-- 强制使用 UTF-8作为输出编码格式! -->
	</init-param>
	<!-- FreeMarker 设置: -->
	<init-param>
		<param-name>template_update_delay</param-name>
		<param-value>0</param-value>
	<!-- 0 只对开发使用! 否则使用大一点的值. -->
	</init-param>
	<init-param>
		<param-name>default_encoding</param-name>
		<param-value>ISO-8859-1</param-value>
	<!-- 模板文件的编码方式. -->
	</init-param>
	<init-param>
		<param-name>number_format</param-name>
		<param-value>0.##########</param-value>
	</init-param>
	<load-on-startup>5</load-on-startup>
</servlet>
<servlet-mapping>
	<servlet-name>freemarker</servlet-name>
	<url-pattern>*.ftl</url-pattern>
</servlet-mapping>
<!-- Free marker [end]-->
<welcome-file-list>
  <welcome-file>index.jsp</welcome-file>
</welcome-file-list>


</web-app>